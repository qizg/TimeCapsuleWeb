<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sinwn.capsule.mapper.UserEntityMapper">
  <resultMap id="BaseResultMap" type="com.sinwn.capsule.entity.UserEntity">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="phone" jdbcType="INTEGER" property="phone" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="token" jdbcType="VARCHAR" property="token" />
    <result column="nick_name" jdbcType="VARCHAR" property="nickName" />
    <result column="state" jdbcType="INTEGER" property="state" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, email, phone, password, token, nick_name, state, create_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_user
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_user
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.sinwn.capsule.entity.UserEntity">
    insert into t_user (id, email, phone, 
      password, token, nick_name, 
      state, create_time)
    values (#{id,jdbcType=BIGINT}, #{email,jdbcType=VARCHAR}, #{phone,jdbcType=INTEGER}, 
      #{password,jdbcType=VARCHAR}, #{token,jdbcType=VARCHAR}, #{nickName,jdbcType=VARCHAR}, 
      #{state,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.sinwn.capsule.entity.UserEntity">
    insert into t_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="token != null">
        token,
      </if>
      <if test="nickName != null">
        nick_name,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=INTEGER},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="token != null">
        #{token,jdbcType=VARCHAR},
      </if>
      <if test="nickName != null">
        #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.sinwn.capsule.entity.UserEntity">
    update t_user
    <set>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=INTEGER},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="token != null">
        token = #{token,jdbcType=VARCHAR},
      </if>
      <if test="nickName != null">
        nick_name = #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sinwn.capsule.entity.UserEntity">
    update t_user
    set email = #{email,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=INTEGER},
      password = #{password,jdbcType=VARCHAR},
      token = #{token,jdbcType=VARCHAR},
      nick_name = #{nickName,jdbcType=VARCHAR},
      state = #{state,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectUsers" resultMap="BaseResultMap" useCache="false">

    select
    <include refid="Base_Column_List" />
    from t_user

  </select>

</mapper>